Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 125, in _main
    prepare(preparation_data)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 236, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    main_content = runpy.run_path(main_path,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 265, in run_path
    return _run_module_code(code, init_globals, run_name,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 97, in _run_module_code
    _run_code(code, mod_globals, init_globals,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 142, in <module>
    centralities_random_hypergraphs = parallel_process(mean_HOI, num_random_hypergraphs)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in parallel_process
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in <listcomp>
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 645, in submit
    self._start_queue_management_thread()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 584, in _start_queue_management_thread
    self._adjust_process_count()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 608, in _adjust_process_count
    p.start()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/context.py", line 284, in _Popen
    return Popen(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 125, in _main
    prepare(preparation_data)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 236, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    main_content = runpy.run_path(main_path,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 265, in run_path
    return _run_module_code(code, init_globals, run_name,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 97, in _run_module_code
    _run_code(code, mod_globals, init_globals,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 142, in <module>
    centralities_random_hypergraphs = parallel_process(mean_HOI, num_random_hypergraphs)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in parallel_process
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in <listcomp>
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 645, in submit
    self._start_queue_management_thread()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 584, in _start_queue_management_thread
    self._adjust_process_count()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 608, in _adjust_process_count
    p.start()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/context.py", line 284, in _Popen
    return Popen(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 125, in _main
    prepare(preparation_data)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 236, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    main_content = runpy.run_path(main_path,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 265, in run_path
    return _run_module_code(code, init_globals, run_name,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 97, in _run_module_code
    _run_code(code, mod_globals, init_globals,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 142, in <module>
    centralities_random_hypergraphs = parallel_process(mean_HOI, num_random_hypergraphs)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in parallel_process
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in <listcomp>
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 645, in submit
    self._start_queue_management_thread()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 584, in _start_queue_management_thread
    self._adjust_process_count()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 608, in _adjust_process_count
    p.start()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/context.py", line 284, in _Popen
    return Popen(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 125, in _main
    prepare(preparation_data)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 236, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    main_content = runpy.run_path(main_path,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 265, in run_path
    return _run_module_code(code, init_globals, run_name,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 97, in _run_module_code
    _run_code(code, mod_globals, init_globals,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 142, in <module>
    centralities_random_hypergraphs = parallel_process(mean_HOI, num_random_hypergraphs)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in parallel_process
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in <listcomp>
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 645, in submit
    self._start_queue_management_thread()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 584, in _start_queue_management_thread
    self._adjust_process_count()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 608, in _adjust_process_count
    p.start()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/context.py", line 284, in _Popen
    return Popen(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
Traceback (most recent call last):
  File "<string>", line 1, in <module>
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 116, in spawn_main
    exitcode = _main(fd, parent_sentinel)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 125, in _main
    prepare(preparation_data)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 236, in prepare
    _fixup_main_from_path(data['init_main_from_path'])
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 287, in _fixup_main_from_path
    main_content = runpy.run_path(main_path,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 265, in run_path
    return _run_module_code(code, init_globals, run_name,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 97, in _run_module_code
    _run_code(code, mod_globals, init_globals,
  File "/Users/boltzmann/anaconda3/lib/python3.8/runpy.py", line 87, in _run_code
    exec(code, run_globals)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 142, in <module>
    centralities_random_hypergraphs = parallel_process(mean_HOI, num_random_hypergraphs)
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in parallel_process
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/Dropbox/VUmc/GitHub/HOI_repo_newest/Emergence-of-High-Order-Hubs-in-the-Human-Connectome/Codeblock4/surrogate_analysis.py", line 129, in <listcomp>
    futures = [executor.submit(generate_and_compute_centrality, dataframe) for _ in range(num_hypergraphs)]
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 645, in submit
    self._start_queue_management_thread()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 584, in _start_queue_management_thread
    self._adjust_process_count()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/process.py", line 608, in _adjust_process_count
    p.start()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/process.py", line 121, in start
    self._popen = self._Popen(self)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/context.py", line 284, in _Popen
    return Popen(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 32, in __init__
    super().__init__(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_fork.py", line 19, in __init__
    self._launch(process_obj)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/popen_spawn_posix.py", line 42, in _launch
    prep_data = spawn.get_preparation_data(process_obj._name)
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 154, in get_preparation_data
    _check_not_importing_main()
  File "/Users/boltzmann/anaconda3/lib/python3.8/multiprocessing/spawn.py", line 134, in _check_not_importing_main
    raise RuntimeError('''
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.
Traceback (most recent call last):
  File "surrogate_analysis.py", line 142, in <module>
    centralities_random_hypergraphs = parallel_process(mean_HOI, num_random_hypergraphs)
  File "surrogate_analysis.py", line 133, in parallel_process
    centrality_results.append(future.result())
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/_base.py", line 437, in result
    return self.__get_result()
  File "/Users/boltzmann/anaconda3/lib/python3.8/concurrent/futures/_base.py", line 389, in __get_result
    raise self._exception
concurrent.futures.process.BrokenProcessPool: A process in the process pool was terminated abruptly while the future was running or pending.
Eigenvector Centrality Threshold for Significance: 0.004124228099400615
Betweeness Centrality Threshold for Significance: 0.004124228099400615
Degree Centrality Threshold for Significance: 0.004124228099400615
Eigenvector Centrality Threshold for Significance: 0.008685516841302207
Betweeness Centrality Threshold for Significance: 0.02282819781750578
Degree Centrality Threshold for Significance: 0.004784688995215311
Eigenvector Centrality Threshold for Significance: 4.806164813133958e-14
Betweeness Centrality Threshold for Significance: 0.00032741214057507617
Degree Centrality Threshold for Significance: 0.004792332268370607
Traceback (most recent call last):
  File "surrogate_analysis.py", line 175, in <module>
    main()
  File "surrogate_analysis.py", line 155, in main
    aggregated_centralities.to_csv('aggregated_centralities'+num_random_hypergraphs+'copies0005fraction.csv', index=False)
TypeError: can only concatenate str (not "int") to str
Eigenvector Centrality Threshold for Significance: 3.546978331884205e-16
Betweeness Centrality Threshold for Significance: 0.0005111821086261981
Degree Centrality Threshold for Significance: 0.004792332268370607
Eigenvector Centrality Threshold for Significance: 9.3326103479526e-14
Betweeness Centrality Threshold for Significance: 0.0003936102236421725
Degree Centrality Threshold for Significance: 0.004792332268370607
Eigenvector Centrality Threshold for Significance: 0.006458336209047779
Betweeness Centrality Threshold for Significance: 0.022671776294922858
Degree Centrality Threshold for Significance: 0.004784688995215311
